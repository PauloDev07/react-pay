{"version":3,"sources":["componentes/Modal.tsx","componentes/Lista.tsx","index.js"],"names":["cards","card_number","cvv","expiry_date","Modal","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","card_index","_createClass","key","value","e","test","preventDefault","currentTarget","valor","toString","replace","id","valueToPay","headerTitle","document","getElementById","payload","destination_user_id","fetch","method","headers","body","JSON","stringify","then","response","json","data","textContent","success","getElementsByClassName","innerHTML","catch","err","_this2","this","props","show","_jsxs","className","onClick","onClose","children","stopPropagation","_jsx","placeholder","type","onKeyPress","event","formatCurrency","name","map","card","index","slice","finalValue","getElementsByTagName","Number","substring","selectElement","options","selectedIndex","getAttribute","payUser","user_id","focus","createModal","Component","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","api","Lista","users","modalUsername","componentDidMount","_asyncToGenerator","_callee","_context","setState","user","src","img","alt","username","_this3","createLi","ReactDOM","render"],"mappings":"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","file":"static/js/main.7aa41b8d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../css/modal.css';\n\n//Definindo interface para os props que a classe vai receber.\ninterface props {\n    'data-name'?: string;\n    user_id: number;\n    show: boolean;\n    onClose: Function,\n}\n\n// Definindo interface para o Payload\ninterface TransactionPayload {\n    // Card Info\n    card_number: string;\n    cvv: number;\n    expiry_date: string;\n    destination_user_id: number;\n    value: number;\n}\n\n//cartões de pagamento.\nlet cards = [\n    {\n        card_number: '1111111111111111',\n        cvv: 789,\n        expiry_date: '01/18',\n    },\n    {\n        card_number: '4111111111111234',\n        cvv: 123,\n        expiry_date: '01/20',\n    },\n];\n\n//API para requisição com informações de pagamento.\nconst api = `https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989`;\n\n//Criando classe do componente Modal.\nclass Modal extends Component<props>{\n    state = {\n        card_index: -1,\n    }\n\n    //Função para formatar o input do usuário para moeda\n    formatCurrency(e: any) {\n        const letterPattern = /[^0-9]/;\n        if (letterPattern.test(e.key)) {\n            e.preventDefault();\n            return;\n        }\n        if (!e.currentTarget.value) return;\n\n        let valor = e.currentTarget.value.toString();\n        valor = valor.replace(/[\\D]+/g, '');\n        valor = valor.replace(/([0-9]{1})$/g, \",$1\");\n\n        if (valor.length >= 6) {\n            while (/([0-9]{4})[,|.]/g.test(valor)) {\n                valor = valor.replace(/([0-9]{1})$/g, \",$1\");\n                valor = valor.replace(/([0-9]{3})[,|.]/g, \".$1\");\n            }\n        }\n\n        e.currentTarget.value = valor;\n    }\n    payUser(id: number, valueToPay: number, card_index: number) {\n\n        //Pegando o titulo do Modal e definindo como um elemento paragrafo de HTML (condutas do typescript)\n        let headerTitle = document.getElementById(\"headerTitle\") as HTMLParagraphElement\n\n        //Criando um objeto com base na interface de Payload\n        let payload: TransactionPayload = {\n            card_number: cards[card_index].card_number,\n            cvv: cards[card_index].cvv,\n            expiry_date: cards[card_index].expiry_date,\n            destination_user_id: id,\n            value: valueToPay\n        }\n\n        //Criando requisição para a API e passando o objeto definido anteriormente como corpo da requisição.\n        fetch(api, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload),\n        }).then((response) => {\n            return response.json();\n        }).then((data) => {\n            headerTitle.textContent = \"Recibo de pagamento\";\n            if (data.success) {\n                document.getElementsByClassName(\"modalBody\")[0].innerHTML = '<p class=\"paymentStatus\">O pagamento foi concluido com sucesso.</p>';\n            } else {\n                document.getElementsByClassName(\"modalBody\")[0].innerHTML = '<p class=\"paymentStatus\">O pagamento <strong>não</strong> foi concluido com sucesso.</p>';\n            }\n        }).catch((err) => {\n            headerTitle.textContent = \"Recibo de pagamento\";\n            document.getElementsByClassName(\"modalBody\")[0].innerHTML = '<p class=\"paymentStatus\">O pagamento <strong>não</strong> foi concluido com sucesso.</p>';\n        });\n    }\n\n    createModal() {\n        if (!this.props.show) {\n            return null;\n        }\n\n        //Retornando Modal case o show seja definido para True;\n        return (\n            <div className=\"modal\" onClick={() => { this.props.onClose() }}>\n                <div className=\"modalHeader\" onClick={e => e.stopPropagation()}>\n                    <p id=\"headerTitle\">Pagamento para <span className=\"username\">{this.props[\"data-name\"]}</span></p>\n                    <button className=\"closeBtn\" onClick={() => { this.props.onClose() }}>X</button>\n                </div>\n                <div className=\"modalBody\" onClick={e => e.stopPropagation()}>\n                    <input placeholder=\"R$ 0,00\" type=\"text\" onKeyPress={(event) => { this.formatCurrency(event) }} />\n                    <select name=\"creditCards\" id=\"creditCards\">\n                        {\n                            cards.map((card, index) => {\n                                return (\n                                    <option data-key={index} key={index} value={card.card_number}>{`Cartão com final ${card.card_number.slice(card.card_number.length - 4)}`}</option>\n                                )\n                            })\n                        }\n                    </select>\n                    <button onClick={() => {\n                        //Botão de pagar usuário\n                        let valueToPay = document.getElementsByTagName('input')[0].value.replace(/[^0-9]/g, \"\");\n                        let finalValue;\n                        if (valueToPay.length > 1) {\n                            finalValue = Number(valueToPay.substring(0, valueToPay.length - 2) + \".\" + valueToPay.substring(valueToPay.length - 2));\n                        } else {\n                            finalValue = Number(valueToPay);\n                        }\n                        let selectElement = document.getElementById(\"creditCards\") as HTMLSelectElement;\n                        let card_index = Number(selectElement.options[selectElement.selectedIndex].getAttribute(\"data-key\"));\n                        if (finalValue) {\n                            this.payUser(this.props.user_id, finalValue, card_index)\n                        } else {\n                            document.getElementsByTagName('input')[0].focus();\n                        }\n                    }}>Pagar</button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            this.createModal()\n        )\n    }\n}\n\nexport default Modal;","import { Component } from 'react';\nimport '../css/lista.css';\nimport Modal from './Modal';\n\n//Link da API para fazer o GET dos usuários\nconst api = `https://www.mocky.io/v2/5d531c4f2e0000620081ddce`;\n\n//Modelo de interface que a API vai retornar.\ninterface User {\n    id: string;\n    name: string;\n    img: string;\n    username: string;\n}\n\n//Componente lista para gerar a lista com os usuários\nclass Lista extends Component<User>{\n    state = {\n        users: [],\n        show: false,\n        modalUsername: \"\",\n        user_id: 0,\n    }\n\n    //Requisitar API quando a página terminar de carregar.\n    componentDidMount = async () => {\n        const response = await fetch(api);\n        const obj: User = await response.json();\n        this.setState({ users: obj });\n    }\n\n    //Função para criar a Lista e botão de pagamento\n    createLi() {\n        return this.state.users.map((user: User, index) => {\n            return (\n                <li className=\"user\" key={user.id} id={user.id} data-name={user.name}>\n                    <img className=\"userAvatar\" src={user.img} alt=\"\" />\n                    <div className=\"userInfo\">\n                        <div>\n                            <p className=\"username\">{user.name}</p>\n                            <p className=\"userID\">ID: {user.id} - Username: {user.username}</p>\n                        </div>\n                        <div className=\"payButton\">\n                            <button onClick={() => {\n                                this.setState({ show: true, modalUsername: user.name, user_id: user.id })\n                            }}>Pagar</button>\n                        </div>\n                    </div>\n                </li>\n            )\n        });\n    }\n    //Chamando o modal\n    render() {\n        return (\n            <div>\n                <Modal user_id={this.state.user_id} data-name={this.state.modalUsername} show={this.state.show} onClose={() => {this.setState({show: false})}}></Modal>\n                <ul>\n                    {this.createLi()}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default Lista;","import ReactDOM from 'react-dom';\nimport Lista from './componentes/Lista';\nimport './css/index.css';\n\nReactDOM.render(\n    <Lista></Lista>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}